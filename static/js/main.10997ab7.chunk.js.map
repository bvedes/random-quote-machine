{"version":3,"sources":["components/Loader/index.js","utils/index.js","components/QuoteBox/index.js","App.js","index.js"],"names":["Loader","className","icon","faSpinner","genOffSet","Math","ceil","random","getColor","fetchQuote","a","offSet","fetch","method","headers","Authorization","then","response","json","data","catch","e","console","error","results","quote","split","message","author","QuoteBox","state","resetState","setState","getNewMessage","handleColor","props","handleQuote","this","style","background","target","rel","href","faTwitter","onClick","React","Component","App","color","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAOeA,EAHA,kBACb,kBAAC,IAAD,CAAiBC,UAAU,eAAeC,KAAMC,O,gBCLrCC,EAAY,kBAAMC,KAAKC,KAAK,GAAAD,KAAKE,SAAsB,IAEvDC,EAAW,WAetB,MAde,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEYJ,MAGHK,EAAU,uCAAG,sDAAAC,EAAA,6DAAOC,EAAP,+BAAgB,EAAhB,SACLC,MAAM,4DAAD,OACsCD,GAC5D,CACEE,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAe,oDAIlBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUA,KACfC,OAAM,SAACC,GAAD,OAAOC,QAAQC,MAAMF,MAbN,cAClBF,EADkB,mBAeEA,EAAKK,QAAQ,UAff,iBAeE,EAAiBC,aAfnB,aAeE,EAAwBC,MAAM,KAfhC,mBAejBC,EAfiB,KAeRC,EAfQ,uBAgBjB,CAAED,UAASC,WAhBM,2CAAH,qDC0CRC,G,kNArDbC,MAAQ,CACNH,QAAS,KACTC,OAAQ,M,EAOVG,WAAa,WACX,EAAKC,SAAS,CAAEL,QAAS,KAAMC,OAAQ,Q,EAGzCK,c,sBAAgB,gCAAAvB,EAAA,sEACoBD,EAAWL,KAD/B,gBACNuB,EADM,EACNA,QAASC,EADH,EACGA,OACjB,EAAKI,SAAS,CACZL,QAAQ,IAAD,OAAMA,EAAN,KACPC,WAJY,2C,EAQhBM,YAAc,WACZ,EAAKC,MAAMD,YAAY1B,M,EAGzB4B,YAAc,WACZ,EAAKL,aACL,EAAKE,gBACL,EAAKC,e,kEAtBLG,KAAKJ,kB,+BA0BL,OACE,yBAAKhC,UAAU,WAAWqC,MAAO,CAAEC,WAAY/B,MAC7C,yBAAKP,UAAU,WAAWoC,KAAKP,MAAMH,SAAW,kBAAC,EAAD,OAChD,yBAAK1B,UAAU,UAAUoC,KAAKP,MAAMF,QACpC,yBAAK3B,UAAU,aACb,uBACEuC,OAAO,SACPC,IAAI,sBACJC,KAAI,gDAA2CL,KAAKP,MAAMH,QAAtD,aAAkEU,KAAKP,MAAMF,SAEjF,kBAAC,IAAD,CAAiB3B,UAAU,OAAOC,KAAMyC,OAG1C,4BAAQ1C,UAAU,yBAAyB2C,QAASP,KAAKD,aAAzD,mB,GA9CaS,IAAMC,YCSdC,E,4MAZbjB,MAAQ,CACNkB,MAAO,W,uDAGC,IAAD,OACP,OACE,yBAAK/C,UAAU,MAAMqC,MAAO,CAAEW,gBAAiBZ,KAAKP,MAAMkB,QACxD,kBAAC,EAAD,CAAUd,YAAa,SAACc,GAAD,OAAW,EAAKhB,SAAS,CAAEgB,kB,GARxCH,IAAMC,W,MCCxBI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.10997ab7.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nconst Loader = () => (\n  <FontAwesomeIcon className=\"icon fa-spin\" icon={faSpinner} />\n);\nexport default Loader;\n","export const genOffSet = () => Math.ceil(Math.random() * (11 - 1) + 1);\n\nexport const getColor = () => {\n  const colors = [\n    '#008000',\n    '#27ae60',\n    '#FF0000',\n    '#f39c12',\n    '#e74c3c',\n    '#9b59b6',\n    '#FB6964',\n    '#0000FF',\n    '#FF00FF',\n    '#52D017',\n    '#77B1A9',\n    '#73A857',\n  ];\n  return colors[genOffSet()];\n};\n\nexport const fetchQuote = async (offSet = 1) => {\n  const data = await fetch(\n    `https://api.paperquotes.com/apiv1/quotes/?limit=1&offset=${offSet}`,\n    {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Token 82f599a9a73da322c7c4f71154bf8d7a53619684',\n      },\n    }\n  )\n    .then((response) => response.json())\n    .then((data) => data)\n    .catch((e) => console.error(e));\n\n  const [message, author] = data.results[0]?.quote?.split('.');\n  return { message, author };\n};\n","import React from 'react';\nimport Loader from '../Loader/index';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { genOffSet, getColor, fetchQuote } from '../../utils';\n\nimport './QuoteBox.scss';\n\nclass QuoteBox extends React.Component {\n  state = {\n    message: null,\n    author: null,\n  };\n\n  componentDidMount() {\n    this.getNewMessage();\n  }\n\n  resetState = () => {\n    this.setState({ message: null, author: null });\n  };\n\n  getNewMessage = async () => {\n    const { message, author } = await fetchQuote(genOffSet());\n    this.setState({\n      message: `\"${message}\"`,\n      author,\n    });\n  };\n\n  handleColor = () => {\n    this.props.handleColor(getColor());\n  };\n\n  handleQuote = () => {\n    this.resetState();\n    this.getNewMessage();\n    this.handleColor();\n  };\n\n  render() {\n    return (\n      <div className=\"QuoteBox\" style={{ background: getColor() }}>\n        <div className=\"message\">{this.state.message || <Loader />}</div>\n        <div className=\"author\">{this.state.author}</div>\n        <div className=\"icons-bar\">\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://twitter.com/intent/tweet?text=${this.state.message}, ${this.state.author}`}\n          >\n            <FontAwesomeIcon className=\"icon\" icon={faTwitter} />\n          </a>\n\n          <button className=\"btn btn-primary btn-sm\" onClick={this.handleQuote}>\n            New Quote\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuoteBox;\n","import React from 'react';\nimport './App.scss';\nimport QuoteBox from './components/QuoteBox';\n\nclass App extends React.Component {\n  state = {\n    color: '#FFCBA4',\n  };\n\n  render() {\n    return (\n      <div className=\"App\" style={{ backgroundColor: this.state.color }}>\n        <QuoteBox handleColor={(color) => this.setState({ color })} />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}